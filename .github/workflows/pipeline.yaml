name: my-pipeline
on:
  # here goes events could be github events or schedule ones
  push:
    branches:
      - main
      - feature
      - dev
  pull_request:
    branches:
      - feature
      - dev
      - main
#JOBS
jobs:
  # name fo the job
  build:
    runs-on: ubuntu-latest # the github hosted runner
    steps:
      - uses: actions/checkout@v2 # a standard action used to get a copy of the repo source code to be added at the begining
      - name: GO Setup
        uses: actions/setup-go@v4
        with:
          go-version: "1.21.0"
      - name: Installing dependencies
        run: |
          go version
          go get -u golang.org/x/lint/golint # to install the golint tool for code linting
          export PATH=$PATH:$(go env GOPATH)/bin # Add the GOPATH/bin to PATH
      - name: Running build
        run: cd ./cmd/api && go build .
      - name: Linting&errors checks
        run: |
          go vet ./... # check all files in the project for issues related to correctness such as potential errors or unintended behaviors
          #golint ./...
    #- name: Running tests
    #  run: cd test && go test -v
    #  test needs to be implemented
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{github.ref == 'refs/heads/main' && github.event.name == 'push'}}
    steps:
      - uses: actions/checkout@v2
      - name: Building and pushing image to dockerhub
        uses: docker/build-push-action@v1
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
          repository: houcine7/goapi
          tag_with_ref: true
